version: "3.9"

services:
  mongo:
    image: mongo:6
    container_name: mongo
    ports: ["27017:27017"]
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports: ["2181:2181"]
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    depends_on: [zookeeper]
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    ports: ["9092:9092"]
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: redis
    ports: ["6379:6379"]
    restart: unless-stopped

  minio:
    image: minio/minio:RELEASE.2024-06-13T22-53-53Z
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    ports: ["9000:9000", "9001:9001"]
    volumes:
      - minio_data:/data
    restart: unless-stopped

  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    env_file:
      - ./auth-service/.env
    environment:
      - PORT=5000
      - MONGO_URI=mongodb://mongo:27017/authdb
      - SERVICE_NAME=auth
      - LOG_LEVEL=info
    depends_on: [mongo]
    ports: ["5000:5000"]
    restart: unless-stopped

  passport-service:
    build:
      context: ./passport-service
    container_name: passport-service
    env_file:
      - ./passport-service/.env
    environment:
      - PORT=5001
      - MONGO_URI=mongodb://mongo:27017/passportdb
      - KAFKA_BROKER=kafka:9092
      - AUTH_BASE_URL=http://auth-service:5000/api/auth
      - AUTH_TIMEOUT_MS=1500
      - SERVICE_NAME=passport
      - LOG_LEVEL=info
    depends_on: [mongo, kafka, auth-service]
    ports: ["5001:5001"]
    restart: unless-stopped

  document-service:
    build:
      context: ./document-service
    container_name: document-service
    env_file:
      - ./document-service/.env
    environment:
      - PORT=5002
      - MONGO_URI=mongodb://mongo:27017/documentdb
      - S3_ENDPOINT=http://minio:9000
      - S3_REGION=auto
      - S3_BUCKET=battery-docs
      - S3_FORCE_PATH_STYLE=true
      - PUBLIC_S3_HOST=http://localhost:9000
      - AUTH_BASE_URL=http://auth-service:5000/api/auth
      - AUTH_TIMEOUT_MS=1500
      - SERVICE_NAME=document
      - LOG_LEVEL=info
    depends_on: [mongo, minio, auth-service]
    ports: ["5002:5002"]
    restart: unless-stopped

  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    env_file:
      - ./notification-service/.env
    environment:
      - PORT=5003
      - KAFKA_BROKER=kafka:9092
      - KAFKA_GROUP_ID=notification-service
      - TOPICS=passport.created,passport.updated,passport.deleted
      - REDIS_URL=redis://redis:6379
      - MONGO_URI=mongodb://mongo:27017/notificationdb
      - AUTH_MONGO_URI=mongodb://mongo:27017/authdb
      - SERVICE_NAME=notification
      - LOG_LEVEL=info
    depends_on: [kafka, redis, mongo]
    ports: ["5003:5003"]
    restart: unless-stopped

  email-worker:
    build:
      context: ./notification-service
    container_name: email-worker
    command: ["node", "src/emailWorker.js"]
    env_file:
      - ./notification-service/.env
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URI=mongodb://mongo:27017/notificationdb
      - AUTH_MONGO_URI=mongodb://mongo:27017/authdb
      - SERVICE_NAME=notification-worker
      - LOG_LEVEL=info
    depends_on: [redis, mongo]
    restart: unless-stopped

volumes:
  mongo_data:
  minio_data:
